<?xml version="1.0"?>
<!-- This file is part of the book                 -->
<!--                                               -->
<!--   Abstract Algebra: Theory and Applications   -->
<!--                                               -->
<!-- Copyright (C) 2010-2014  Robert A. Beezer     -->
<!-- See the file COPYING for copying conditions.  -->
<!--                                               -->
<!-- This file is automatically generated from the -->
<!-- private solution manual.  Minor contributed   -->
<!-- edits can be made against this file for       -->
<!-- the purpose of a pull request.                -->
<exercises xml:id="fields-sage-exercises">
    <title>Sage Exercises</title>

    <exercise number="1">
        <statement>
            <p>Create the polynomial <m>p(x)=x^5+2x^4+1</m> over <m>{\mathbb Z}_3</m>.  Verify that it does not have any linear factors by evaluating <m>p(x)</m> with each element of <m>{\mathbb Z}_3</m>, and then check that <m>p(x)</m> is irreducible.</p>

            <p>Create a finite field of order <m>3^5</m> with the <c>FiniteField()</c> command, but include the <c>modulus</c> keyword set to the polynomial <m>p(x)</m> to override the default choice.</p>

            <p>Recreate <m>p(x)</m> as a polynomial over this field.  Check each of the <m>3^5 = 243</m> elements of the field to see if they are roots of the polynomial and list all of the elements which are roots.  Finally, request that Sage give a factorization of <m>p(x)</m> over the field, and comment on the relationship between your list of roots and your factorization.</p>
        </statement>
        
    </exercise>

    <exercise number="2">
        <statement>
            <p>This problem continues the previous one.  Build the ring of polynomials over <m>{\mathbb Z}_3</m> and within this ring use <m>p(x)</m> to generate a principal ideal.  Finally construct the quotient of the polynomial ring by the ideal.  Since the polynomial is irreducible, this quotient ring is a field, and by Proposition<nbsp/><xref ref="proposition-minimal-poly"/> this quotient ring is isomorphic to the number field in the previous problem.</p>

            <p>Borrowing from your results in the previous question, construct five roots of the polynomial <m>p(x)</m> within this quotient ring, but now as expressions in the generator of the quotient ring (which is technically a coset).  Use Sage to verify that they are indeed roots.  This demonstrates using a quotient ring to create a splitting field for an irreducible polynomial over a finite field.</p>
        </statement>

        
    </exercise>

    <exercise number="3">
        <statement>
            <p>Subsection<nbsp/><xref ref="subsection-algebraic-elements"/> relies on techniques from linear algebra and contains Theorem<nbsp/><xref ref="theorem-finite-extension"/>: every finite extension is an algebraic extension.  This exercise will help you understand this proof.</p>

            <p>The polynomial <m>r(x)=x^4+2x+2</m> is irreducible over the rationals (Eisenstein's criterion with prime <m>p=2</m>).  Create a number field that contains a root of <m>r(x)</m>.  By Theorem<nbsp/><xref ref="theorem-finite-extension"/>, and the remark following, every element of this finite field extension is an algebraic number, and hence satisfies some polynomial over the base field (it is this polynomial that Sage will produce with the <c>.minpoly()</c> method).  This exercise will show how we can use just linear algebra to determine this minimal polynomial.</p>

            <p>Suppose that <c>a</c> is the generator of the number field you just created with <m>r(x)</m>.  Then we will determine the minimal polynomial of <c>t = 3a + 1</c> using just linear algebra.  According to the proof, the first five powers of <c>t</c> (start counting from zero) will be linearly dependent.  (Why?)  So a nontrivial relation of linear dependence on these powers will provide the coefficients of a polynomial with <c>t</c> as a root.  Compute these five powers, then construct the correct linear system to determine the coefficients of the minimal polynomial, solve the system, and suitably interpret its solutions.</p>

            <p>Hints:  The <c>vector()</c> and <c>matrix()</c> commands will create vectors and matrices, and the <c>.solve_right()</c> method for matrices can be used to find solutions. Given an element of the number field, which will necessarily be a polynomial in the generator <c>a</c>, the <c>.vector()</c> method of the element will provide the coefficients of this polynomial in a list.</p>
        </statement>

        
    </exercise>

    <exercise number="4">
        <statement>
            <p>Construct the splitting field of <m>s(x)=x^4+x^2+1</m> and find a factorization of <m>s(x)</m>  over this field into linear factors.</p>
        </statement>
        
    </exercise>

    <exercise number="5">
        <statement>
            <p>Form the number field, <m>K</m>, which contains a root of the irreducible polynomial <m>q(x)=x^3+3x^2+3x-2</m>.  Name your root <c>a</c>.  Verify that <m>q(x)</m> factors, but does not split, over <m>K</m>.  With <m>K</m> now as the base field, form an extension of <m>K</m> where the quadratic factor of <m>q(x)</m> has a root.  Name this root <c>b</c>, and call this second extension of the tower <m>L</m>.</p>

            <p>Use <c>M.&lt;c&gt; = L.absolute_field()</c> to form the flattened tower that is the absolute number field <c>M</c>.  Find the defining polynomial of <c>M</c> with the <c>.polynomial()</c> method.  From this polynomial, which must have the generator <c>c</c> as a root, you should be able to use elementary algebra to write the generator as a fairly simple expression.</p>

            <p><m>M</m> should be the splitting field of <m>q(x)</m>.  To see this, start over, and build from scratch a new number field, <m>P</m>, using the simple expression for <c>c</c> that you just found.  Use <c>d</c> as the name of the root used to construct <c>P</c>.  Since <c>d</c> is a root of the simple minimal polynomial for <c>c</c>, you should be able to write an expression for <c>d</c> that a pre-calculus student would recognize.</p>

            <p>Now factor the original polynomial <m>q(x)</m> (with rational coefficients) over <m>P</m>, to see the polynomial split (as expected).  Using this factorization, and your simple expression for <c>d</c> write simplified expressions for the three roots of <m>q(x)</m>.  See if you can convert between the two versions of the roots <q>by hand</q>, and without using the isomorphisms provided by the <c>.structure()</c> method on <c>M</c>.</p>
        </statement>

        
    </exercise>

</exercises>
