<?xml version="1.0" encoding="UTF-8" ?>

<!-- This file is part of the book                 -->
<!--                                               -->
<!--   Abstract Algebra: Theory and Applications   -->
<!--                                               -->
<!-- Copyright (C) 1997-2014  Thomas W. Judson     -->
<!-- See the file COPYING for copying conditions.  -->

<!-- This file is part of the book                 -->
<!--                                               -->
<!--   Abstract Algebra: Theory and Applications   -->
<!--                                               -->
<!-- Copyright (C) 2010-2014  Robert A. Beezer     -->
<!-- See the file COPYING for copying conditions.  -->


</p>
</statement>
<sage />
</exercise>

<exercise number="1">
<statement>
<p>
Construct a keypair for Alice using the first two primes greater than <m>10^{12}</m>.  For your choice of <m>E</m>, use a single prime number and use the smallest possible choice.

Use Sage commands to verify that your encryption and decryption keys are multiplicative inverses.
</p>
</statement>
<sage />
</exercise>


<exercise number="2">
<statement>
<p>
Construct a keypair for Bob using the first two primes greater than <m>2\cdot 10^{12}</m>.  For your choice of <m>E</m>, use a single prime number and use the smallest possible choice.

Encode the word <c>Math</c> using ASCII values in the same manner as described in this section.  Create a signed message of this word for communication from Alice to Bob.
</p>
</statement>
<sage />
</exercise>

<exercise number="3">
<statement>
<p>
Demonstrate how Bob converts the message received from Alice back into the word <c>Math</c>.
</p>
</statement>
<sage />
</exercise>

<exercise number="4">
<statement>
<p>
Create a new signed message from Alice to Bob.  Simulate the message being tampered with by adding one to the integer Bob receives, before he decrypts it.  What result does Bob get for the letters of the message when he decrypts and unsigns the tampered message?
</p>
</statement>
<sage />
</exercise>

<exercise number="5">
<statement>
<p>
\textbf{Classroom Exercise}  Organize a class into several small groups.  Have each group construct key pairs with some minimum size (digits in <m>n</m>).  Each group should keep their private key to themselves, but make their public key available to everybody in the room.  It could be written on the board (error-prone) or maybe pasted in a public site like \texttt{pastebin.com}.  Then each group can send a signed message to another group, where the groups could be arranged logically in a circular fashion for this purpose.  Of course, messages should be posted publicly as well.  Expect a success rate somewhere between 50\<!--  and 100\%. -->

If you do not do this in class, grab a study buddy and send each other messages in the same manner.  Expect a success rate of 0\<!-- , 50\% or 100\%. -->
</p>
</statement>
<sage />
</exercise>


