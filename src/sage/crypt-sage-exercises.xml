<?xml version="1.0"?>
<!-- This file is part of the book                 -->
<!--                                               -->
<!--   Abstract Algebra: Theory and Applications   -->
<!--                                               -->
<!-- Copyright (C) 2010-2014  Robert A. Beezer     -->
<!-- See the file COPYING for copying conditions.  -->
<!--                                               -->
<!-- This file is automatically generated from the -->
<!-- private solution manual.  Minor contributed   -->
<!-- edits can be made against this file for       -->
<!-- the purpose of a pull request.                -->
<exercises xml:id="crypt-sage-exercises">
	<title>Sage Exercises</title>

	<exercise number="1">
		<statement>
			<p>Construct a keypair for Alice using the first two primes greater than <m>10^{12}</m>.  For your choice of <m>E</m>, use a single prime number and use the smallest possible choice.</p>

			<p>Output the values of <m>n</m>, <m>E</m>, and <m>D</m> for Alice.  Then use Sage commands to verify that Alice's encryption and decryption keys are multiplicative inverses.</p>
		</statement>
		
	</exercise>

	<exercise number="2">
		<statement>
			<p>Construct a keypair for Bob using the first two primes greater than <m>2\cdot 10^{12}</m>.  For your choice of <m>E</m>, use a single prime number and use the smallest possible choice.  Output the values of <m>n</m>, <m>E</m>, and <m>D</m> for Alice.</p>

			<p>Encode the word <c>Math</c> using ASCII values in the same manner as described in this section (keep the capitalization as shown).  Create a signed message of this word for communication from Alice to Bob.  Output the three integers: the message, the signed message and the signed, encrypted message.</p>
		</statement>
		
	</exercise>

	<exercise number="3">
		<statement>
			<p>Demonstrate how Bob converts the message received from Alice back into the word <c>Math</c>.  Output the value of the intermediate computations and the final human-readable message.</p>
		</statement>
		
	</exercise>

	<exercise number="4">
		<statement>
			<p>Create a new signed message from Alice to Bob.  Simulate the message being tampered with by adding <m>1</m> to the integer Bob receives, before he decrypts it.  What result does Bob get for the letters of the message when he decrypts and unsigns the tampered message?</p>
		</statement>
		
	</exercise>

	<exercise number="5">
		<title>Classroom Exercise</title>
		<statement>
			<p>Organize a class into several small groups.  Have each group construct key pairs with some minimum size (digits in <m>n</m>).  Each group should keep their private key to themselves, but make their public key available to everybody in the room.  It could be written on the board (error-prone) or maybe pasted in a public site like \texttt{pastebin.com}.  Then each group can send a signed message to another group, where the groups could be arranged logically in a circular fashion for this purpose.  Of course, messages should be posted publicly as well.  Expect a success rate somewhere between 50<percent/> and 100<percent/>.</p>

			<p>If you do not do this in class, grab a study buddy and send each other messages in the same manner.  Expect a success rate of 0<percent/>, 50<percent/> or 100<percent/>.</p>
		</statement>
	</exercise>

</exercises>
